const cron = require('node-cron');
const db = require('../models'); 
const { Op } = require('sequelize');

cron.schedule('*/10 * * * *', async () => {
    const now = new Date();
    console.log('üîÑ Cron job ƒëang ch·∫°y...');

    try {
        // L·∫•y danh s√°ch c√°c ƒë∆°n h√†ng h·∫øt h·∫°n
        const expiredOrders = await db.Order.findAll({
            where: {
                payment_status: 0,
                expires_at: { [Op.lt]: now },
            },
            include: [{
                model: db.Order_Product,
            }],
        });

        if (!expiredOrders || expiredOrders.length === 0) {
            console.log('Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o h·∫øt h·∫°n.');
            return;
        }

        // L·∫∑p qua t·ª´ng ƒë∆°n h√†ng
        for (const order of expiredOrders) {
            if (!order.Order_Products || order.Order_Products.length === 0) {
                console.log(`ƒê∆°n h√†ng ${order.id} kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.`);
                continue;
            }

            // L·∫∑p qua t·ª´ng s·∫£n ph·∫©m trong ƒë∆°n h√†ng
            for (const orderProduct of order.Order_Products) {
                const { productId, quantity } = orderProduct;

                // C·∫≠p nh·∫≠t l·∫°i s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
                const product = await db.Product.findByPk(productId);
                if (product) {
                    await product.update({
                        quantity_current: product.quantity_current + quantity,
                        quantity_sold: product.quantity_sold - quantity,
                    });
                }
            }

            // C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng
            await order.update({
                order_status: 3, // ƒê√£ h·ªßy
                payment_status: 3, // Thanh to√°n th·∫•t b·∫°i
                expires_at: null,
            });

            console.log(`ƒê∆°n h√†ng ${order.id} ƒë√£ ƒë∆∞·ª£c h·ªßy v√† c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m.`);
        }

        console.log('Cron job ƒë√£ ho√†n t·∫•t!');
    } catch (error) {
        console.error('L·ªói khi ch·∫°y cron job:', error);
    }
});
